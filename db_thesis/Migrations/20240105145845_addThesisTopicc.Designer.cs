// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using db_thesis.Utility;

#nullable disable

namespace db_thesis.Migrations
{
    [DbContext(typeof(ThesisDbContext))]
    [Migration("20240105145845_addThesisTopicc")]
    partial class addThesisTopicc
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("db_thesis.Models.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuthorId"));

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("AuthorId");

                    b.HasIndex("PersonId");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("db_thesis.Models.Institue", b =>
                {
                    b.Property<int>("InstitueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InstitueId"));

                    b.Property<string>("InstitueName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UniversityId")
                        .HasColumnType("int");

                    b.HasKey("InstitueId");

                    b.HasIndex("UniversityId");

                    b.ToTable("Institues");
                });

            modelBuilder.Entity("db_thesis.Models.Language", b =>
                {
                    b.Property<int>("LanguageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LanguageId"));

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("LanguageId");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("db_thesis.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.HasKey("PersonId");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("db_thesis.Models.Supervisor", b =>
                {
                    b.Property<int>("SupervisorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupervisorId"));

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("SupervisorId");

                    b.HasIndex("PersonId");

                    b.ToTable("Supervisors");
                });

            modelBuilder.Entity("db_thesis.Models.Thesis", b =>
                {
                    b.Property<int>("ThesisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ThesisId"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("InstitueId")
                        .HasColumnType("int");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfPages")
                        .HasColumnType("int");

                    b.Property<DateTime>("SubmissionDate")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)");

                    b.Property<int>("SupervisorId")
                        .HasColumnType("int");

                    b.Property<string>("ThesisAbstract")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ThesisNo")
                        .HasColumnType("int");

                    b.Property<string>("ThesisTitle")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ThesisTopic")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<int>("UniversityId")
                        .HasColumnType("int");

                    b.HasKey("ThesisId");

                    b.HasIndex("AuthorId");

                    b.HasIndex("InstitueId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("SupervisorId");

                    b.HasIndex("TypeId");

                    b.HasIndex("UniversityId");

                    b.ToTable("Thesisses");
                });

            modelBuilder.Entity("db_thesis.Models.ThesisType", b =>
                {
                    b.Property<int>("TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TypeId"));

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("TypeId");

                    b.ToTable("Types");
                });

            modelBuilder.Entity("db_thesis.Models.University", b =>
                {
                    b.Property<int>("UniversityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UniversityId"));

                    b.Property<string>("UniversityName")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.HasKey("UniversityId");

                    b.ToTable("Universities");
                });

            modelBuilder.Entity("db_thesis.Models.Author", b =>
                {
                    b.HasOne("db_thesis.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("db_thesis.Models.Institue", b =>
                {
                    b.HasOne("db_thesis.Models.University", "University")
                        .WithMany()
                        .HasForeignKey("UniversityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("University");
                });

            modelBuilder.Entity("db_thesis.Models.Supervisor", b =>
                {
                    b.HasOne("db_thesis.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("db_thesis.Models.Thesis", b =>
                {
                    b.HasOne("db_thesis.Models.Author", "Author")
                        .WithMany("Theses")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("db_thesis.Models.Institue", "Institue")
                        .WithMany()
                        .HasForeignKey("InstitueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("db_thesis.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("db_thesis.Models.Supervisor", "Supervisor")
                        .WithMany("Thesisses")
                        .HasForeignKey("SupervisorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("db_thesis.Models.ThesisType", "ThesisType")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("db_thesis.Models.University", "University")
                        .WithMany()
                        .HasForeignKey("UniversityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Institue");

                    b.Navigation("Language");

                    b.Navigation("Supervisor");

                    b.Navigation("ThesisType");

                    b.Navigation("University");
                });

            modelBuilder.Entity("db_thesis.Models.Author", b =>
                {
                    b.Navigation("Theses");
                });

            modelBuilder.Entity("db_thesis.Models.Supervisor", b =>
                {
                    b.Navigation("Thesisses");
                });
#pragma warning restore 612, 618
        }
    }
}
